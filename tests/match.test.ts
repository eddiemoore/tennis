import Match from '../src'

test('score() will return "0-0"', () => {
  const match = Match('player 1', 'player 2')
  const expected = '0-0'
  const actual = match.score()
  expect(actual).toEqual(expected)
})

test('score() will return "0-0, 15-15"', () => {
  const match = Match('bob', 'joe')
  match.pointWonBy('bob')
  match.pointWonBy('joe')
  expect(match.score()).toEqual('0-0, 15-15')
})

test('score() will return "0-0, 40-15"', () => {
  const match = Match('bob', 'joe')
  match.pointWonBy('bob')
  match.pointWonBy('joe')
  match.pointWonBy('bob')
  match.pointWonBy('bob')
  expect(match.score()).toEqual('0-0, 40-15')
})

test('score() will return "0-0, Deuce"', () => {
  const match = Match('bob', 'joe')
  match.pointWonBy('bob')
  match.pointWonBy('joe')
  match.pointWonBy('bob')
  match.pointWonBy('bob')
  match.pointWonBy('joe')
  match.pointWonBy('joe')
  expect(match.score()).toEqual('0-0, Deuce')
})

test('score() will return "0-0, Advantage player 1"', () => {
  const match = Match('player 1', 'player 2')
  match.pointWonBy('player 1')
  match.pointWonBy('player 2')
  match.pointWonBy('player 1')
  match.pointWonBy('player 2')
  match.pointWonBy('player 1')
  match.pointWonBy('player 2')
  match.pointWonBy('player 1')
  expect(match.score()).toEqual('0-0, Advantage player 1')
})

test('score() will return "0-0, Advantage player 2"', () => {
  const match = Match('player 1', 'player 2')
  match.pointWonBy('player 1')
  match.pointWonBy('player 2')
  match.pointWonBy('player 1')
  match.pointWonBy('player 2')
  match.pointWonBy('player 1')
  match.pointWonBy('player 2')
  match.pointWonBy('player 2')
  expect(match.score()).toEqual('0-0, Advantage player 2')
})

test('score() will return "0-0, Advantage john"', () => {
  const match = Match('john', 'paul')
  match.pointWonBy('john')
  match.pointWonBy('paul')
  match.pointWonBy('john')
  match.pointWonBy('john')
  match.pointWonBy('paul')
  match.pointWonBy('paul')
  match.pointWonBy('john')
  expect(match.score()).toEqual('0-0, Advantage john')
})

test('score will return "1-0"', () => {
  const match = Match('john', 'paul')
  match.pointWonBy('john')
  match.pointWonBy('paul')
  match.pointWonBy('john')
  match.pointWonBy('john')
  match.pointWonBy('paul')
  match.pointWonBy('paul')
  match.pointWonBy('john')
  match.pointWonBy('john')
  expect(match.score()).toEqual('1-0')
})

test('Win Set no competition', () => {
  const match = Match('george', 'ringo')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('1-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('2-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('3-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('4-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('5-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('6-0, Set')
})

test('Win Set 7-5', () => {
  const match = Match('george', 'ringo')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('1-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('2-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('3-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('4-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('5-0')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-1')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-2')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-3')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-4')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-5')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('6-5')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('7-5, Set')
})

test('Tie Break 7-6', () => {
  const match = Match('george', 'ringo')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('1-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('2-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('3-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('4-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('5-0')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-1')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-2')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-3')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-4')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-5')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('6-5')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('6-6')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  // 2 Extra to make sure game doesn't increase
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('7-6, Set')
})

test('Tie Break 7-6 more points', () => {
  const match = Match('george', 'ringo')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('1-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('2-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('3-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('4-0')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('5-0')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-1')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-2')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-3')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-4')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('5-5')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('6-5')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  match.pointWonBy('ringo')
  expect(match.score()).toEqual('6-6')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('ringo')
  match.pointWonBy('george')
  match.pointWonBy('george')
  expect(match.score()).toEqual('7-6, Set')
})
